dependencies {
  compile group: 'com.google.android', name: 'android', version: '2.3.1', transitive: false
  compile group: 'org.eclipse.swt.win32.win32', name: 'x86', version: '3.3.0-v3346', transitive: false
}

jar {
  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
        "Trident-BuildStamp": timeStamp
    )
  }
}

task testJar(type: Jar) {
  classifier = 'tst'

  from sourceSets.test.classes

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
        "Trident-BuildStamp": timeStamp
    )
  }
}

task baseJar(type: Jar) {
  classifier = 'base'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/android/**'
  exclude 'org/pushingpixels/trident/swing/**'
  exclude 'org/pushingpixels/trident/swt/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
        "Trident-BuildStamp": timeStamp
    )
  }
}

task androidJar(type: Jar) {
  classifier = 'android'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/swing/**'
  exclude 'org/pushingpixels/trident/swt/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
        "Trident-BuildStamp": timeStamp
    )
  }
}

task swingJar(type: Jar) {
  classifier = 'swing'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/android/**'
  exclude 'org/pushingpixels/trident/swt/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
        "Trident-BuildStamp": timeStamp
    )
  }
}

task swtJar(type: Jar) {
  classifier = 'swt'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/android/**'
  exclude 'org/pushingpixels/trident/swing/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
        "Trident-BuildStamp": timeStamp
    )
  }
}

artifacts {
  archives baseJar
  archives androidJar
  archives swingJar
  archives swtJar
}


uploadArchives {
  try {
    def x = [deployUsername, deployPassword]
  } catch (Exception e) {
    deployUsername = 'unset'
    deployPassword = ''
  }
  repositories {
    mavenDeployer {
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication userName: deployUsername, password: deployPassword
      }
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication userName: deployUsername, password: deployPassword
      }
      configurePOM(pom)
    }
  }
}

install {
  configurePOM(repositories.mavenInstaller.pom)
}

private def configurePOM(def pom) {
  pom.project {
    modelVersion '4.0.0'
    packaging 'jar'
    name "trident"
    description "A fork of @kirilcool's trident project"
    url "http://insubstantial.github.com/halberd"
    licenses {
      license {
        name 'BSD License'
        url 'http://www.opensource.org/licenses/bsd-license.php'
        distribution 'repo'
      }
    }
    scm {
      connection 'scm:git:git@github.com:Insubstantial/insubstantial.git'
      developerConnection 'scm:git:git@github.com:Insubstantial/insubstantial.git'
      url 'scm:git:git@github.com:Insubstantial/insubstantial.git'
    }
    developers {
      developer {
        name 'Kirill Grouchnikov'
        email 'kirillcool@yahoo.com'
        roles {
          role 'author'
          role 'developer'
        }
      }
      developer {
        name 'Danno Ferrin'
        email 'danno.ferrin@shemnon.com'
        roles {
          role 'maintainer'
        }
      }
    }
  }
  // deal with a gradle bug where transitive=false is not passed into the generated POM
  pom.whenConfigured {cpom ->
    cpom.dependencies*.scope = 'provided'
  }
}


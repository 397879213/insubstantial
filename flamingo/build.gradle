dependsOn(":trident")

dependencies {
  compile project (":trident")
  compile files('lib/svnkit.jar') // unknown version of svnkit
  compile files('lib/batik-all.jar') // batik 1.7.  No maven deployments (?)
  testCompile group: 'com.jgoodies', name: 'forms', version: '1.2.0'
  testCompile group:'junit', name:'junit', version:'4.3.1'
  testCompile group:'org.easytesting', name:'fest-assert', version:'1.2'
  testCompile group:'org.easytesting', name:'fest-reflect', version:'1.2'
  testCompile group:'org.easytesting', name:'fest-swing', version:'1.2.1'
  testCompile group:'org.easytesting', name:'fest-swing-junit', version:'1.2.1'
  testCompile group:'org.easytesting', name:'fest-swing-junit-4.3.1', version:'1.2.1'
  testCompile files('lib/js.jar') // ??? is this some old ver or rhino?  is it even needed?
  testCompile files('lib/pdf-transcoder.jar') // ??? is this some old ver or rhino?  is it even needed?
  testCompile files('lib/test/debug-1.0.jar')
}

test {
  // there are some errors related to using Batik and running these GUI tests
  // in gradle as opposed to Ant.
  // but some of the tests came pre-broken!
  enabled = false
}

jar {
  manifest {
    attributes(
      "Flamingo-Version": version,
      "Flamingo-VersionName": versionKey,
      "Flamingo-BuildStamp": timeStamp
    )
  }
}

task sourceJar(type: Jar) {
  from sourceSets.main.java
  from sourceSets.main.resources
  classifier = 'sources'
}

task javadocJar(type: Jar) {
  dependsOn javadoc
  from javadoc.destinationDir
  classifier = 'javadoc'
}

task testJar(type: Jar) {
  classifier = 'tst'

  from sourceSets.test.classes

  manifest {
    attributes(
      "Flamingo-Version": version,
      "Flamingo-VersionName": versionKey,
      "Flamingo-BuildStamp": timeStamp
    )
  }
}

artifacts {
  archives sourceJar
  archives javadocJar
}

uploadArchives {
  try {
    def x = [deployUsername, deployPassword]
  } catch (Exception e) {
    deployUsername = 'unset'
    deployPassword = ''
  }
  repositories {
    mavenDeployer {
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication userName: deployUsername, password: deployPassword
      }
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication userName: deployUsername, password: deployPassword
      }
      pom.project {
        modelVersion '4.0.0'
        packaging 'jar'
        name "flamingo"
        description "A fork of @kirilcool's flamingo project"
        url "http://insubstantial.github.com/peacock"
        licenses {
          license {
            name 'The BSD License'
            url 'http://www.opensource.org/licenses/bsd-license.php'
            distribution 'repo'
          }
        }
        scm {
          connection 'scm:git:git@github.com:Insubstantial/insubstantial.git'
          developerConnection 'scm:git:git@github.com:Insubstantial/insubstantial.git'
          url 'scm:git:git@github.com:Insubstantial/insubstantial.git'
        }
        developers {
          developer {
            name 'Kirill Grouchnikov'
            email 'kirillcool@yahoo.com'
            roles {
              role 'author'
              role 'developer'
            }
          }
          developer {
            name 'Danno Ferrin'
            email 'danno.ferrin@shemnon.com'
            roles {
              role 'maintainer'
            }
          }
        }
      }
    }
  }
}